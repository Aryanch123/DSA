import java.util.*;

public class Solution {
    public static void nextPermutation(int[] nums) {
        int n = nums.length;

        int ind = -1; 
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
               
                ind = i;
                break;
            }
        }

        if (ind == -1) {
            
            reverse(nums, 0, n - 1);
            return;
        }

        for (int i = n - 1; i > ind; i--) {
            if (nums[i] > nums[ind]) {
                swap(nums, i, ind);
                break;
            }
        }

        reverse(nums, ind + 1, n - 1);
    }

    private static void reverse(int[] nums, int start, int end) {
        while (start < end) {
            swap(nums, start, end);
            start++;
            end--;
        }
    }

    private static void swap(int[] nums, int i, int j) {
        int tmp = nums[i];
        nums[i] = nums[j];
        nums[j] = tmp;
    }

    public static void main(String[] args) {
        int[] A = {2, 1, 5, 4, 3, 0, 0};
        nextPermutation(A);

        System.out.print("The next permutation is: [");
        for (int i = 0; i < A.length; i++) {
            System.out.print(A[i] + " ");
        }
        System.out.println("]");
    }
}
